jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      name: Free disk space
      run: .github/scripts/gha-free-disk-space.sh
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      name: Increase gradle daemon heap size
      run: 'sed -i "s/org.gradle.jvmargs=/org.gradle.jvmargs=-Xmx3g /" gradle.properties

        '
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      name: Build
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        arguments: check -x javadoc -x spotlessCheck -PskipTests=true ${{ inputs.no-build-cache
          && '--no-build-cache' || '' }}
        cache-read-only: ${{ inputs.cache-read-only }}
        gradle-home-cache-excludes: caches/build-cache-1
    - continue-on-error: true
      name: Check for jApiCmp diffs
      run: "# need to \"git add\" in case any generated files did not already exist\n\
        git add docs/apidiffs\nif git diff --cached --quiet\nthen\n  echo \"No diff\
        \ detected.\"\nelse\n  echo \"Diff detected - did you run './gradlew jApiCmp'?\"\
        \n  echo $(git diff --cached --name-only)\n  echo $(git diff --cached)\n \
        \ exit 1\nfi\n"
    - continue-on-error: true
      name: Upload agent jar
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
      with:
        if-no-files-found: ignore
        name: opentelemetry-javaagent
        path: javaagent/build/libs/opentelemetry-javaagent-*-SNAPSHOT.jar
  examples:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      name: Free disk space
      run: .github/scripts/gha-free-disk-space.sh
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      name: Set up Gradle cache
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        cache-read-only: ${{ inputs.cache-read-only }}
    - continue-on-error: true
      name: Local publish of artifacts
      run: ./gradlew publishToMavenLocal -x javadoc
    - continue-on-error: true
      name: Local publish of gradle plugins
      run: ./gradlew publishToMavenLocal -x javadoc
      working-directory: gradle-plugins
    - continue-on-error: true
      name: Build distro
      run: ./gradlew build --init-script ../../.github/scripts/local.init.gradle.kts${{
        inputs.no-build-cache && ' --no-build-cache' || '' }}
      working-directory: examples/distro
    - continue-on-error: true
      name: Build extension
      run: ./gradlew build --init-script ../../.github/scripts/local.init.gradle.kts${{
        inputs.no-build-cache && ' --no-build-cache' || '' }}
      working-directory: examples/extension
    - continue-on-error: true
      name: Run muzzle check against extension
      run: ./gradlew muzzle --init-script ../../.github/scripts/local.init.gradle.kts
      working-directory: examples/extension
  extra-dependency-management-enforcement:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      name: Dependency check
      run: "set +e\ngrep '^  implementation(\".*:.*:[0-9].*\")\\|^  api(\".*:.*:[0-9].*\"\
        )' \\\n     --include=\\*.kts \\\n     -r instrumentation \\\n  | grep -v\
        \ testing/build.gradle.kts \\\n  | grep -v com.azure:azure-core-tracing-opentelemetry\
        \ \\\n  | grep -v com.couchbase.client:tracing-opentelemetry \\\n  > dependencies.txt\n\
        \nif [ -s dependencies.txt ]; then\n  echo unmanaged dependencies found\n\
        \  echo\n  cat dependencies.txt\n  exit 1\nfi\n"
  gradle-plugins:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      name: Free disk space
      run: .github/scripts/gha-free-disk-space.sh
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      name: Build
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        arguments: build ${{ inputs.no-build-cache && '--no-build-cache' || '' }}
        build-root-directory: gradle-plugins
        cache-read-only: ${{ inputs.cache-read-only }}
  gradle-wrapper-validation:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      uses: gradle/wrapper-validation-action@460a3ca55fc5d559238a0efc7fa9f7465df8585d
  license-check:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      name: Free disk space
      run: .github/scripts/gha-free-disk-space.sh
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      name: Generate license report
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        arguments: generateLicenseReport --no-build-cache
        cache-read-only: ${{ inputs.cache-read-only }}
        gradle-home-cache-excludes: caches/build-cache-1
    - continue-on-error: true
      name: Check licenses
      run: "# add any untracked folders that may have been added by generateLicenseReport\n\
        git add licenses\n# there's always going to one line difference due to the\
        \ timestamp included in the report\nif [[ $(git diff --cached --shortstat\
        \ licenses) == \" 1 file changed, 1 insertion(+), 1 deletion(-)\" ]]\nthen\n\
        \  echo \"Licenses are up-to-date.\"\nelse\n  echo \"Licenses are not up-to-date,\
        \ please run './gradlew generateLicenseReport' locally and commit.\"\n  echo\n\
        \  echo \"$(git diff --cached --stat licenses)\"\n  echo\n  echo \"$(git diff\
        \ --cached licenses)\"\n  exit 1\nfi\n"
  smoke-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: matrix.os == 'windows-latest'
      name: Support long paths
      run: git config --system core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      name: Free disk space
      run: .github/scripts/gha-free-disk-space.sh
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      name: Set up Gradle cache
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        cache-read-only: ${{ inputs.cache-read-only || matrix.smoke-test-suite !=
          'tomcat' }}
        gradle-home-cache-excludes: caches/build-cache-1
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      name: Build
      run: ./gradlew :smoke-tests:test -PsmokeTestSuite=none --no-daemon ${{ inputs.no-build-cache
        && ' --no-build-cache' || '' }}
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      name: Test
      run: ./gradlew :smoke-tests:test -PsmokeTestSuite=${{ matrix.smoke-test-suite
        }}${{ inputs.no-build-cache && ' --no-build-cache' || '' }}
    - continue-on-error: true
      if: failure()
      name: Upload jvm crash dump files if any
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
      with:
        if-no-files-found: ignore
        name: javacore-smoke-test-${{ matrix.smoke-test-suite }}-${{ matrix.os }}
        path: 'hs_err_pid*.log

          smoke-tests/hs_err_pid*.log

          javacore.*.txt

          smoke-tests/javacore.*.txt

          Snap.*.trc

          smoke-tests/Snap.*.trc

          core.*.dmp

          smoke-tests/core.*.dmp

          jitdump.*.dmp

          smoke-tests/jitdump.*.dmp

          '
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - os: ${{ inputs.skip-windows-smoke-tests && 'windows-latest' || '' }}
        - os: windows-latest
          smoke-test-suite: websphere
        os:
        - windows-latest
        - ubuntu-latest
        smoke-test-suite:
        - jetty
        - liberty
        - payara
        - tomcat
        - tomee
        - websphere
        - wildfly
        - other
  spotless:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      name: Free disk space
      run: .github/scripts/gha-free-disk-space.sh
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      name: Spotless
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        arguments: spotlessCheck ${{ inputs.no-build-cache && '--no-build-cache' ||
          '' }}
        cache-read-only: ${{ inputs.cache-read-only }}
        gradle-home-cache-excludes: caches/build-cache-1
  test:
    name: test${{ matrix.test-partition }} (${{ matrix.test-java-version }}, ${{ matrix.vm
      }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - continue-on-error: true
      name: Free disk space
      run: .github/scripts/gha-free-disk-space.sh
    - continue-on-error: true
      id: setup-test-java
      name: Set up JDK ${{ matrix.test-java-version }}-${{ matrix.vm }} for running
        tests
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: ${{ matrix.vm == 'hotspot' && 'zulu' || 'adopt-openj9'}}
        java-version: ${{ matrix.test-java-version }}
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      name: Set up Node
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
      with:
        node-version: 16
    - continue-on-error: true
      name: Cache pnpm modules
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
      with:
        key: ${{ runner.os }}-test-cache-pnpm-modules
        path: ~/.pnpm-store
    - continue-on-error: true
      name: Start deadlock detector
      run: .github/scripts/deadlock-detector.sh
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      name: List tests
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        arguments: 'check -x spotlessCheck listTestsInPartition -PtestPartition=${{
          matrix.test-partition }}

          '
        cache-read-only: true
    - continue-on-error: true
      name: Set test tasks
      run: 'echo "test-tasks=$(cat test-tasks.txt | xargs echo | sed ''s/\n/ /g'')"
        >> $GITHUB_ENV

        '
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      name: Test
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        arguments: '${{ env.test-tasks }} -PtestJavaVersion=${{ matrix.test-java-version
          }} -PtestJavaVM=${{ matrix.vm }} -Porg.gradle.java.installations.paths=${{
          steps.setup-test-java.outputs.path }} -Porg.gradle.java.installations.auto-download=false
          ${{ inputs.no-build-cache && '' --no-build-cache'' || '''' }}

          '
        cache-read-only: ${{ inputs.cache-read-only || matrix.test-java-version !=
          11 || matrix.vm != 'hotspot' }}
        gradle-home-cache-excludes: caches/build-cache-1
    - continue-on-error: true
      if: ${{ !cancelled() && hashFiles('build-scan.txt') != '' }}
      name: Build scan
      run: cat build-scan.txt
    - continue-on-error: true
      if: failure()
      name: Upload deadlock detector artifacts if any
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
      with:
        if-no-files-found: ignore
        name: deadlock-detector-test-${{ matrix.test-java-version }}-${{ matrix.vm
          }}-${{ matrix.test-partition }}
        path: /tmp/deadlock-detector-*
    - continue-on-error: true
      if: failure()
      name: Upload jvm crash dump files if any
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
      with:
        if-no-files-found: ignore
        name: javacore-test-${{ matrix.test-java-version }}-${{ matrix.test-partition
          }}
        path: '**/hs_err_pid*.log

          **/javacore.*.txt

          **/Snap.*.trc

          **/core.*.dmp

          **/jitdump.*.dmp

          '
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - vm: ${{ inputs.skip-openj9-tests && 'openj9' || '' }}
        - test-java-version: 21
          vm: openj9
        test-java-version:
        - 8
        - 11
        - 17
        - 21
        test-partition:
        - 0
        - 1
        - 2
        - 3
        vm:
        - hotspot
        - openj9
name: Reusable - Common
on:
  repository_dispatch:
    types: trigger-ga___build-common.yml
permissions:
  contents: read
