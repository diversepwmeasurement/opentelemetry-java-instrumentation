jobs:
  publishLinux:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Free disk space
      run: .github/scripts/gha-free-disk-space.sh
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      name: Login to GitHub package registry
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.repository_owner }}
    - continue-on-error: true
      name: Set tag
      run: echo "TAG=$(date '+%Y%m%d').$GITHUB_RUN_ID" >> $GITHUB_ENV
    - continue-on-error: true
      name: Build Docker image
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        arguments: :smoke-tests:images:fake-backend:jib -Djib.httpTimeout=120000 -Djib.console=plain
          -PextraTag=${{ env.TAG }}
  publishWindows:
    defaults:
      run:
        shell: bash
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Support long paths
      run: git config --system core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK for running Gradle
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17.0.6
    - continue-on-error: true
      name: Login to GitHub package registry
      uses: azure/docker-login@v1
      with:
        login-server: ghcr.io
        password: ${{ secrets.GITHUB_TOKEN }}
        username: ${{ github.repository_owner }}
    - continue-on-error: true
      name: Set tag
      run: echo "TAG=$(date '+%Y%m%d').$GITHUB_RUN_ID" >> $GITHUB_ENV
    - continue-on-error: true
      name: Build Docker image
      uses: gradle/actions/setup-gradle@6cec5d49d4d6d4bb982fbed7047db31ea6d38f11
      with:
        arguments: :smoke-tests:images:fake-backend:dockerPush -PextraTag=${{ env.TAG
          }}
  workflow-notification:
    if: always()
    needs:
    - publishLinux
    - publishWindows
    uses: ./.github/workflows/reusable-workflow-notification.yml
    with:
      success: "${{\n  needs.publishLinux.result == 'success' &&\n  needs.publishWindows.result\
        \ == 'success'\n}}"
name: Publish fake backend images for smoke tests
on:
  repository_dispatch:
    types: trigger-ga___publish-smoke-test-fake-backend-images.yml
