jobs:
  create-pull-request-against-main:
    needs:
    - prereqs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set environment variables
      run: "version=$(.github/scripts/get-version.sh)\nversion=${version//-SNAPSHOT/}\n\
        if [[ $version =~ ^([0-9]+)\\.([0-9]+)\\.0$ ]]; then\n  major=\"${BASH_REMATCH[1]}\"\
        \n  minor=\"${BASH_REMATCH[2]}\"\n  next_version=\"$major.$((minor + 1)).0\"\
        \nelse\n  echo \"unexpected version: $version\"\n  exit 1\nfi\necho \"NEXT_VERSION=${next_version}-SNAPSHOT\"\
        \ >> $GITHUB_ENV\necho \"VERSION=$version\" >> $GITHUB_ENV\n"
    - continue-on-error: true
      name: Update version
      run: .github/scripts/update-version.sh $NEXT_VERSION
    - continue-on-error: true
      name: Update the change log on main
      run: '# the actual release date on main will be updated at the end of the release
        workflow

        date=$(date "+%Y-%m-%d")

        sed -Ei "s/^## Unreleased$/## Unreleased\n\n## Version $VERSION ($date)/"
        CHANGELOG.md

        '
    - continue-on-error: true
      name: Use CLA approved github bot
      run: .github/scripts/use-cla-approved-github-bot.sh
    - continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.OPENTELEMETRYBOT_GITHUB_TOKEN }}
      name: Create pull request against main
      run: "message=\"Update version to $NEXT_VERSION\"\nbody=\"Update version to\
        \ \\`$NEXT_VERSION\\`.\"\nbranch=\"opentelemetrybot/update-version-to-${NEXT_VERSION}\"\
        \n\ngit checkout -b $branch\ngit commit -a -m \"$message\"\ngit push --set-upstream\
        \ origin $branch\ngh pr create --title \"$message\" \\\n             --body\
        \ \"$body\" \\\n             --base main\n"
  create-pull-request-against-release-branch:
    needs:
    - prereqs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Create release branch
      run: "version=$(.github/scripts/get-version.sh)\nversion=${version//-SNAPSHOT/}\n\
        if [[ $version =~ ^([0-9]+)\\.([0-9]+)\\.0$ ]]; then\n  release_branch_name=$(echo\
        \ $version | sed -E 's/([0-9]+)\\.([0-9]+)\\.0/release\\/v\\1.\\2.x/')\nelse\n\
        \  echo \"unexpected version: $version\"\n  exit 1\nfi\n\ngit push origin\
        \ HEAD:$release_branch_name\n\necho \"VERSION=$version\" >> $GITHUB_ENV\n\
        echo \"RELEASE_BRANCH_NAME=$release_branch_name\" >> $GITHUB_ENV\n"
    - continue-on-error: true
      name: Update version
      run: .github/scripts/update-version.sh $VERSION
    - continue-on-error: true
      name: Update download link version
      run: 'sed -Ei "s,https://github\.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/,https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v$VERSION/,"
        README.md

        '
    - continue-on-error: true
      name: Update the change log with the approximate release date
      run: 'date=$(date "+%Y-%m-%d")

        sed -Ei "s/^## Unreleased$/## Version $VERSION ($date)/" CHANGELOG.md

        '
    - continue-on-error: true
      name: Use CLA approved github bot
      run: .github/scripts/use-cla-approved-github-bot.sh
    - continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.OPENTELEMETRYBOT_GITHUB_TOKEN }}
      name: Create pull request against the release branch
      run: "message=\"Prepare release $VERSION\"\nbranch=\"opentelemetrybot/prepare-release-${VERSION}\"\
        \n\ngit checkout -b $branch\ngit commit -a -m \"$message\"\ngit push --set-upstream\
        \ origin $branch\ngh pr create --title \"[$RELEASE_BRANCH_NAME] $message\"\
        \ \\\n             --body \"$message.\" \\\n             --base $RELEASE_BRANCH_NAME\n"
  prereqs:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Verify prerequisites
      run: "if [[ $GITHUB_REF_NAME != main ]]; then\n  echo this workflow should only\
        \ be run against main\n  exit 1\nfi\n\nif ! grep --quiet \"^## Unreleased$\"\
        \ CHANGELOG.md; then\n  echo the change log is missing an \\\"Unreleased\\\
        \" section\n  exit 1\nfi\n"
name: Prepare release branch
on:
  repository_dispatch:
    types: trigger-ga___prepare-release-branch.yml
