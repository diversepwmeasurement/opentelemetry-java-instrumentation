jobs:
  prepare-patch-release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      run: "if [[ ! $GITHUB_REF_NAME =~ ^release/v[0-9]+\\.[0-9]+\\.x$ ]]; then\n\
        \  echo this workflow should only be run against release branches\n  exit\
        \ 1\nfi\n\nif ! grep --quiet \"^## Unreleased$\" CHANGELOG.md; then\n  echo\
        \ the change log is missing an \\\"Unreleased\\\" section\n  exit 1\nfi\n"
    - continue-on-error: true
      name: Set environment variables
      run: "version=$(.github/scripts/get-version.sh)\nif [[ $version =~ ^([0-9]+\\\
        .[0-9]+)\\.([0-9]+)$ ]]; then\n  major_minor=\"${BASH_REMATCH[1]}\"\n  patch=\"\
        ${BASH_REMATCH[2]}\"\nelse\n  echo \"unexpected version: $version\"\n  exit\
        \ 1\nfi\necho \"VERSION=$major_minor.$((patch + 1))\" >> $GITHUB_ENV\n"
    - continue-on-error: true
      name: Update version
      run: .github/scripts/update-version.sh $VERSION
    - continue-on-error: true
      name: Update download link version
      run: 'sed -Ei "s,https://github\.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v[0-9]+\.[0-9]+\.[0-9]+/,https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v$VERSION/,"
        README.md

        '
    - continue-on-error: true
      name: Update the change log with the approximate release date
      run: 'date=$(date "+%Y-%m-%d")

        sed -Ei "s/^## Unreleased$/## Version $VERSION ($date)/" CHANGELOG.md

        '
    - continue-on-error: true
      name: Use CLA approved github bot
      run: .github/scripts/use-cla-approved-github-bot.sh
    - continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.OPENTELEMETRYBOT_GITHUB_TOKEN }}
      name: Create pull request
      run: "message=\"Prepare release $VERSION\"\nbranch=\"opentelemetrybot/prepare-release-${VERSION}\"\
        \n\ngit checkout -b $branch\ngit commit -a -m \"$message\"\ngit push --set-upstream\
        \ origin $branch\ngh pr create --title \"[$GITHUB_REF_NAME] $message\" \\\n\
        \             --body \"$message.\" \\\n             --base $GITHUB_REF_NAME\n"
name: Prepare patch release
on:
  repository_dispatch:
    types: trigger-ga___prepare-patch-release.yml
